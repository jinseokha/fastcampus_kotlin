

Null Safety
 -> Null에 대해서 안전하다
 -> 코틀린의 특징

Null vs 0
-> 휴지를 다 쓰고 휴지심만 남은 상태
-> null : 휴지심도 없는 상태, 존재 하는 상태, 모르는 상태

Null이 안전하지 않는 이유
-> 0 + 10 = 10
-> null + 10 = ? -> 에러
-> button.setOnClickListener
-> null.setOnClickListener -> 에러
-> NullPointExceptionError 발생

if(number != null) {
 number + 10
 }

if(button != null) {
button.setonClickListener
}

코틀린이 Null Safety하기 위해서 사용하는 문법
-> ? : Null이 아니라면 이하 구문 실행
-> !! : Null이 아님을 개발자 보장한다.

사용방법
button?.setoOnClickListener
 ==> button이 null이 아니라면 setOnClickListener 장착 (실행)

button!!.setOnClickListener (자주사용하는걸 비추) ==> 확실하지 않기 때문


Null이 될 수 있는 타입
Int, Double, Float, Class -> Null이 될 수 없는 타입
Int?, Double?, Float?, Class? -> Null이 될 수 있는 타입




